<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apple.mall.dao.UserApplyMapper">

    <resultMap id="BaseResultMap" type="com.apple.mall.entity.UserApply">
        <id column="apply_user_id" jdbcType="BIGINT" property="applyUserID"/>
        <result column="apply_flag" jdbcType="TINYINT" property="applyFlag"/>
        <result column="apply_reason" jdbcType="VARCHAR" property="applyReason"/>
        <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime"/>
        <result column="apply_is_deleted" jdbcType="TINYINT" property="applyIsDeleted"/>
        <result column="apply_id" jdbcType="INTEGER" property="applyId"/>
    </resultMap>

        <sql id="Base_Column_List">
            apply_user_id, apply_flag, apply_reason, apply_time, apply_is_deleted,apply_id
        </sql>

    <insert id="insertUserApply" parameterType="com.apple.mall.entity.UserApply"
            keyProperty="applyId" useGeneratedKeys="true">
        insert into user_apply(
        apply_user_id,apply_reason,apply_time,apply_id
        )
        value (
        #{applyUserID},#{applyReason},#{applyTime},#{applyId}
        )
    </insert>

    <select id="findUserApplyList" resultMap="BaseResultMap">
        select *
        from user_apply
        order by apply_time desc
    </select>
    
<!--    <select id="findUserApplyByApplyId" parameterType="com.apple.mall.entity.UserApply">-->

<!--    </select>-->

    <select id="findAll" resultMap="BaseResultMap">
        select *
        from user_apply
    </select>

    <select id="getTotalUserApply"  resultType="int">
        select count(*) from user_apply
        where 1=1
        <if test="applyUserID!=null ">
            and apply_user_id = #{applyUserID}
        </if>
    </select>

    <update id="modifyUserApplyBatch">
        update user_apply
        set apply_flag=#{applyStatus} where apply_user_id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>